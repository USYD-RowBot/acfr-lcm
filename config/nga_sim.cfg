sensors {   
    
    rdi {
        io = "serial";
        serial_dev = "/dev/ttyCTI6";
        baud   = 9600;
        parity = "8N1";
	mode = "PD5";
	pd5_count_max = 5;
	pd0_count_max = 0;
	range = 50; # max range for dvl in (m)
    cone_angle = 2.4;
    position = [0, 0, 0, 0, -90, 0];
    } #rdi
    
    tcm {
        
            io = "serial";
            serial_dev = "/dev/ttyCTI7";
            baud = 38400;
            parity = "8N1";
    }

    kvh1750 {
                device = "/dev/ttyCTI4";
                baud = 921600;
                sample_rate = 100;
        }
    
    aanderaa-4319 {
        
            io = "serial";
            serial_dev = "/dev/ttyCTI0";
            baud = 9600;
            parity = "8N1";
    }

    evologics-modem {
        vehicle_name = "NGA";
        logging_level = 2;
	device = "/dev/ttyCTI8";
	baud = 19200;
	parity = "8N1";
        ping_period = -1;
        ping_timeout = 20;
        gain = 0;
        source_level = 3;
        auto_gain = "false";
        targets = [5];
        target_names = ["NGA"];
        sound_speed= 1500;
        usbl_address = 1;
	has_ahrs = "false";
    }

    
    acfr-psu {
       io = "serial";
       serial_dev = "/dev/ttyCTI3";
       baud = 230400;
       parity = "8N1";
       addrs = [3, 1, 2];
	}

    os-power-system {
	num_devs = 2;
	io = "socket";
	ip = "172.16.154.81";
	ports = ["4000", "4001"];
    }
   
    parosci
    {
        io = "serial";
        serial_dev = "/dev/ttyCTI1";
        baud   = 9600;
        parity = "8N1";
    }

    micron-sounder-multiplex 
    {
        io = "serial";
        serial_dev = ["/dev/ttyCTI9" , "/dev/ttyCTI10"];
        baud   = 9600;
        parity = "8N1";
        serial_ports = [9, 10];
    }
	 
}
nav
{
    occupancy
    {
        map_half_time = 1000;
        map_hit_val = 10;
        map_max_val = 30;
        map_min_val = 9;
        map_size = [500, 500, 100]; #voxels
        voxel_size = 0.2;

    }

    acfr-nav-new
    {
        slam_config = "/home/auv/git/acfr-lcm/config/slam_ngasim.cfg";
        attitude_source = "TCM";
        depth_source = "PAROSCI";
        #latitude = -33.839459; 
        #longitude = 151.254380;
    }
}

acfr {
    local-planner-nga
    {

        turning_radius = 0.1;
        minimum_altitude = 1.0;
        maximum_pitch = 0.4;

        velocity_change_distance = 3;
        default_leg_velocity = 1;

        look_ahead_velocity_scale = 0;        
        max_dist_from_line = 1;
        max_angle_from_line = 0.4;

	max_angle = 220;
	max_angle_waypoint_change = 20;
	radius_increase = 1;
	
	forward_bound = 4.0;
	side_bound = 4.0;
	drop_dist = 4; #5.0;
	drop_angle = 25; #57;
	dist_to_dest_bound = 4.0;
	waypoint_timeout = 20;

	replan_interval = 1000;
	fwd_distance_min = 1;
    fwd_distance_slowdown = 3;
    }

    cam-trigger {
        device = "/dev/ttyCTI13";
        baud = 115200;
        parity = "8N1";
        pulseWidthUs = 1000;
        strobeDelayUs = 0;
        frequency = 2;
    }
    
    
    tunnel-thrusters 
    {  
       io = "serial";
       serial_dev = "/dev/ttyCTI15";
       baud = 230400;
       parity = "8N1";
       addrs = [3, 2];

       vert_fore_pos_down = "false";
       vert_aft_pos_down = "true";
       lat_fore_pos_right = "false";
       lat_aft_pos_right = "true";
    }

    bluefin-tail {
       io = "serial";
       serial_dev = "/dev/ttyCTI12";
       baud = 115200;
       parity = "8N1";
       max_rpm = 600;
    }   

    spektrum-control {
    	control_port = 9001;
	channels = 6;
    }

    health
    {
	# operatations bounding box
	max_depth = 100.0;
        min_alt = 0.05;
        max_pitch = 45.0;

        depth_timeout = 2000000;
        abort_on_no_nav = 1;
    }


    nga-control
    {
        velocity
        {
            kp = 700;
            ki = 50;
            kd = 100;
           sat = 700;
           # sat = 0;
        }
        
	# TODO: we should change this to only use integral.
	# We cannot compensate for the dynamic roll and 
	#    should aim to just have an integral instead.
        roll
        {
            kp = 0.0; #0.5;
            ki = 0.0; #0.0;
            kd = 0.0; #0.0;
            sat = 0.0; #0.1;
        }
        # Control parameters for depth control (sets pitch setpoint) 
        depth
        {
            kp = 2.0;
            ki = 0.015;
            kd = 0.15;
            sat = 0.2094;
        }
       
        # Control parameters for pitch control (sets pitch planes) 
        pitch
        {
            # SBW Disabled pitch control at Lizard Island for surface only operation
            kp = -0.2;
            ki = -0.0;
            kd = -0.5;
            sat = 0.2094;
            #kp = -1.5;
            #ki = 0.0;
            #kd = -1.5;
            #sat = 0.2094;
            #kp = 0.0;
            #ki = 0.0;
            #kd = 0.0;
            #sat = 0.3;
        }
	pitch_r
	{

	    kp = 0.0;
	    ki = 0.0;
	    kd = 0.0;
	    sat = 0.2094;
	}

        altitude
        {
            kp = 1.0;
            ki = 0.0;
            kd = 0.0;
            sat = 10.0;
        }

        heading
        {
            kp = 1.5;
            ki = 0.0;
            kd = 0.5;
            sat = 0.2094;
        }

	tunnel_depth
	{
            kp = 0.15;
            ki = 0.0;
            kd = 0.15;
            sat = 0.3;
	}

	tunnel_descent
	{
            kp = 7000.0;
            ki = 70.0;
            kd = 1000.0;
            sat = 1500.0;
	}

	tunnel_pitch
	{
            kp = 500.0;
            ki = 0.0;
            kd = 50.0;
            sat = 1000.0;
	}

	tunnel_heading
	{
            kp = 3500.0;
            ki = 0.0;
            kd = 700.0;
            sat = 1500.0;
	}

        spektrum_timeout = 1000000;
        planner_timeout = 3000000;
        nav_timeout = 1000000;

        pitch_max = 0.34;
        plane_rudder_max = 0.4;
        main_rpm_max = 1500;
        roll_offset_max = 0.2;

    }

}


