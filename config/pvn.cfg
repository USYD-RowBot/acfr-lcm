INCLUDE = [
    "site/umich-name.cfg",
    #"site/dearborn.cfg",
    "viewer/pvn.cfg",
    "ladybug3/segway-ladybug3.cfg"
];

vehicle {
    name = "segway";
    lcm_channel_prefix = "SEG_";
} # vehicle


isamServer {
    # channel names
    lcm_channels {
        ADD_NODE_CHANNEL               = "ADD_NODE";
        ADD_NODE_ACK_CHANNEL           = "ADD_NODE_ACK";
        RETURN_ST_CHANNEL              = "RETURN_STATE";
        REQUEST_ST_CHANNEL             = "REQUEST_STATE";
        VLINK_CHANNEL                  = "VLINKS";
        INIT_ISAM_CHANNEL              = "INIT_ISAM";
        CMD_CHANNEL                    = "CMD";
	VIS_CHANNEL		       = "SEG_ISAM_VIS";
    } # lcm_channels

    # init parameters
    isam_init {
        max_iterations              = 50;      # default 500
        mod_batch                   = 50;      # default 100, hull inspection used 50
        verbose                     = 1;       # default false
	quiet			    = 0;
    }

    # post processing
    post_process {
        save_cputime = 1;
        timing_fname = "cputime.dat";   # cputime
        mucov_fname = "mucov.dat";      # mu and cov
        graph_fname = "graph.isam";     # isam graph
        pc_fname = "pc.dat";            # pose3d collection
    } # post_process
}

pvn-map-builder {
    
    #----------------------------------------------------------------------
    map_name = "dude";
    graph_dir = "/home/carlevar/pvn_data/graphs/2012-05-12";
    conditions {
    	sky = 0; # UNKOWN = 0, SUNNY = 1, CLOUDY = 2, OVERCAST = 3      
    	tod = 0;  # UNKNOWN = 0, MORNING = 1, MIDDAY = 2, AFTERNOON  = 3
    	snow = -1; # no = 0, yes = 1, unknown = -1
        foliage = -1; # no = 0, yes = 1, unknown = -1   
    } 
    image_dir = "/home/carlevar/pvn_data/lcmlogs/2012-05-12/lb3";   
    #----------------------------------------------------------------------

    map_dir = "/home/carlevar/pvn_data/maps";
    las_dir = "/home/carlevar/tmp/navteq/729-pp00024-2011-10-11-13-11-27/Lidar";
    vocab_img_dirs = ["/home/carlevar/pvn_data/lcmlogs/2011-12-31-10-11-24"];
    
    use_camera = [1, 1, 1, 1, 1, 1];
    
    
    las_subsample_pct = 0.001;
}

seg-graph-manager {

    world_frame = 0; #build graph in local frame or in global w/ gps
    full_3d = 1;     #build the graph in full 3D or in 2.5D (good for indoors)

    channel_lb3_imagesync = "LB3_IMAGESYNC";
    #channel_lb3_imagesync = "SEG_HEARTBEAT_5HZ";
    channel_gps = "SEG_RTK_GPSD3";
    channel_ms_25 = "SEG_MICROSTRAIN_25";
    channel_ms = "SEG_MICROSTRAIN";
    
    R_gps {
	diag_std = [2, 2, 3];
	dtor = 	   [0, 0, 0];
    }
    
    R_ms_h {
	diag_std = [7];
	dtor = 	   [1];
    }
    
    R_ms_rp {
	diag_std = [10, 10]; # pretty weak because just used as prior saying should be zero, not microstrain measurement noise
	dtor = 	   [1, 1];
    }
    
    # small environments
    drop_node_dtrans = 2;	# meters
    drop_node_dyaw = 90;        # degrees
    
    max_laser_plinks = 3;
    laser_plink_trans_roc = 4;	  # translation roc in meters
    laser_plink_yaw_roc = 360;	  # yaw rotation roc degrees
    p_roc_thresh = 0.25;          # do not attempt links unless we are 25% sure they lie in the ROC
    
}

seg-position {
    channel = "SEG_POSITION";
}

velodyne-scan-matcher {
    position_channel = "SEG_POSITION";
    drop_scan_channel = "SEG_VELODYNE_SCAN_MATCHER_DROP_DS";
    plink_channel = "SEG_VELODYNE_PLINK";
    logdir = "/home/carlevar/pvn_data/scans";
    
    subsample_pct = 0.10;
    #scan_start_stop_deg = [60, 300]; #use only a portion of the 360 degree scan for matching
    
    R {
	#diag_std = [0.2, 0.2, 0.2, 5.0, 5.0, 5.0];
	diag_std = [0.5, 0.5, 0.5, 7.0, 7.0, 7.0];
	dtor = 	   [0,   0,   0,   1,   1,   1];
    }
    
    mahal_dist_t = 0.90;
    
    gicp {
	max_iters = 20;
        d_max = 3;
        epsilon = 0.001;
        debug = 0;
    }
    
    #icp {
    #	d_max = 3;
    # 	max_iters = 10;
    #	debug = 1;
    #}
    
    visualize = 0;
}

sensors {
    gpsd3-client {
        gsd {
            io = "none";
            channel = "SEG_GPSD3";
        }
        x_vs = [0,0,0,0,0,0];
        x_lr = [0,0,0,0,0,0];
	    
        gpsddev = "/dev/ttyS7";

    } #ppsboard-gps

    gpsd3-rtk-client {
        gsd {
            io = "none";
            channel = "SEG_RTK_GPSD3";
        }
        x_vs = [0,0,0,0,0,0];
        x_lr = [0,0,0,0,0,0];

        gpsddev = "/dev/ttyS6";

    } #ppsboard-gps

    # legacy
    ms-gx3 {
        gsd {
            io = "serial";
            device = "/dev/ttyACM0";
            baud = 115200;
            parity = "8N1";
            channel = "SEG_MICROSTRAIN";
        }
        #x_vs = [0,0,0,0,180,0]; # oldest data
	#x_vs = [0,0,0,3,171,0]; # older data
	x_vs = [0,0,0,0,0,0]; # newest data
	x_lr = [0,0,0,0,0,0];
    } #microstrain

    ms-gx3-25 {
        gsd {
            io = "serial";
            device = "/dev/ttyACM0";
            baud = 115200;
            parity = "8N1";
	    channel = "SEG_MICROSTRAIN_25";	# new data
        }
	#x_vs = [0,0,0,180,0,0]; # older data
	x_vs = [0,0,0,0,0,0]; # newest data
	x_lr = [0,0,0,0,0,0];
    } #microstrain

    ms-gx3-45 {
        gsd {
            io = "serial";
            device = "/dev/ttyACM0";
            baud = 115200;
            parity = "8N1";
            channel = "SEG_MICROSTRAIN";
	    #channel = "SEG_MICROSTRAIN_25";
        }
        x_vs = [0,0,0,180,0,0];
        x_lr = [0,0,0,0,0,0];
    } #microstrain

    kvh-dsp3000 {
        gsd {
            io = "serial";
            #device = "/dev/ttyS5";
            device = "/dev/ttyUSB0";
            baud = 38400;
            parity = "8N1";
            channel = "SEG_KVH";
        }
        x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];
    } #kvh
    
    velodyne {
	model = "HDL_32E";
	channel = "SEG_VELODYNE";
	#x_vs = [-0.11,0,-1.35,180,-30,0]; # down angle config
	#x_vs = [-0.08,0,-1.06,0,0,0];     # test upside down config
	x_vs = [0,0,-1.03,0,0,-90];        # final upside down config
	    
	# initial guess before calibration is done    
	x_vel_lb3 = [0.0000, 0.0300, -0.0100, 180.0000, 0, 90.0000];
	
	intrinsic_calib_file = "../../config/velodyne/HDL32E_segway_db.xml";
    } # velodyne

    hokuyo-30m {
	x_vs = [0.2,0,-0.5,180,0,0];
    }
    
    hokuyo-4m {
	x_vs = [0.2,0,-0.5,180,-40,0];
    }
    
} #sensors

cam0-feature {
    image_channel = "LB3_CAM0";
    feature_channel = "FEATURES_CAM0";
    cache_dir = "/home/carlevar/pvn_data/features/cam0";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam0";
    camera_calib_key = "ladybug.cam0.cam_calib";
    pub_undist_img = 0;
}

cam1-feature {
    image_channel = "LB3_CAM1";
    feature_channel = "FEATURES_CAM1";
    cache_dir = "/home/carlevar/pvn_data/features/cam1";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam1";
    camera_calib_key = "ladybug.cam1.cam_calib";
    pub_undist_img = 0;
}

cam2-feature {
    image_channel = "LB3_CAM2";
    feature_channel = "FEATURES_CAM2";
    cache_dir = "/home/carlevar/pvn_data/features/cam2";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam2";
    camera_calib_key = "ladybug.cam2.cam_calib";
    pub_undist_img = 0;
}

cam3-feature {
    image_channel = "LB3_CAM3";
    feature_channel = "FEATURES_CAM3";
    cache_dir = "/home/carlevar/pvn_data/features/cam3";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam3";
    camera_calib_key = "ladybug.cam3.cam_calib";
    pub_undist_img = 0;
}

cam4-feature {
    image_channel = "LB3_CAM4";
    feature_channel = "FEATURES_CAM4";
    cache_dir = "/home/carlevar/pvn_data/features/cam4";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam4";
    camera_calib_key = "ladybug.cam4.cam_calib";
    pub_undist_img = 0;
}

cam5-feature {
    image_channel = "LB3_CAM5";
    feature_channel = "FEATURES_CAM5";
    cache_dir = "/home/carlevar/pvn_data/features/cam5";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    camera_config_key = "ladybug.cam5";
    camera_calib_key = "ladybug.cam5.cam_calib";
    pub_undist_img = 0;
}

webcam-feature {
    image_channel = "WEBCAM_IMG";
    feature_channel = "FEATURES_WEBCAM_IMG";
    cache_dir = "/home/carlevar/webcam_scrape/gr_scrape/features";
    #cache_dir = "/home/carlevar/webcam_scrape/nyc_scrape/features";
    ftypes = ["siftgpu"];                       # ["cvsurf", "siftgpu", "harris"];
    #siftgpu_server = "10.0.3.107";             # if not provided, it reaches the server in local machine
    #camera_config_key = "webcam";
    #camera_calib_key = "webcam.cam_calib";
    pub_undist_img = 1;
    use_clahs = 0;
}

webcam {
    x_vs = [0.0,0.0,0.0,0.0,0.0,0.0];
    cam_calib {
        fc = [ 0.0, 0.0 ]; 			# Focal length
        cc = [ 0.0, 0.0 ]; 			# Principal point
        alpha_c = 0.0;        # Skew coefficient
        nx = 0; # Image size x
        ny = 0; # Image size y
    }
}

navigator {
    channel = 			"SEG_NAVIGATOR";
    channel_debug_meas = 	"SEG_NAVIGATOR_DEBUG_MEAS";
    channel_debug_pred = 	"SEG_NAVIGATOR_DEBUG_PRED";
    channel_drop_ds =    	"SEG_NAVIGATOR_DROP_DS";
    channel_drop_ds_ack = 	"SEG_NAVIGATOR_DROP_DS_ACK";

    est {
        debug = 1;                  # turn on/off navigator_debug_t msgs
        est_engine = "EKF";
	
	org_lat = 45.563267;        	# douglas lake center of SOUTH fishtail bay
        org_lon = -84.672318;       	# douglas lake center of SOUTH fishtail bay
	
        # note state sizes depends on process model you set up below
        ini_mu = [0,0, 0,0,0, 0,0,0];
	ini_mu_dtor = [0,0, 1,1,1, 1,1,1];
	
        # Sigma to associate with initilization (order of magnitude greater than sensor)
	# directly specify full initial sigma with ini_Sigma = double(n*n)
	# or set the standard deviation of a diagonal matrix (in human readable units)
	# need to know which state elements are in degrees
	ini_Sigma {
	    diag_std = [0.0,0.0, 10.0,10.0,0.0, 10.0,10.0,10.0];
	    dtor = [0,0, 1,1,1, 1,1,1];
	}
    }
    
    pmf {
        pmf_name = "PMF_DIFFERENTIAL_DRIVE";
	
	Qadd { # additive noise for quantities not affected by control
	    diag_std = [0,0, 1,1,0, 1,1,1];
	    dtor = [0,0, 1,1,1, 1,1,1];
    	}
	
	Qu { # wheel velocities (meter/sec), and delta kvh (degrees/second)
	    diag_std = [0.7, 0.7, 0.005];
	    dtor = [0, 0, 1];
    	}
	
	axel_track = 0.5461; # distance between wheels, 21.5 inches
	wheel_radius = 0.2413; # 19 inches diameter
	wheel_size_fudge_factor = 0.98; #pretty good for 10psi should be lower for 4psi 
    }
    
    omfs {

        # for the new -25 driver
	OMF_MS_GX3_25_RP {
            omf_name = "OMF_MS_GX3_25_RP";
            R {
		        diag_std = [0.66, 0.66];     #diag_std = [2, 2];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3-25";
            innov_mahal_test_thresh = 0.999;
        }
        OMF_MS_GX3_25_AB {
            omf_name = "OMF_MS_GX3_25_AB";
	        R {
		        diag_std = [8, 8];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3-25";
            innov_mahal_test_thresh = 0.999;  
        }

	# for the legacy driver
        OMF_MS_GX3_RP {
            omf_name = "OMF_MS_GX3_RP";
            R {
                        diag_std = [0.66, 0.66];      #diag_std = [2, 2];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3";
            innov_mahal_test_thresh = 0.999;
        }
        OMF_MS_GX3_AB {
            omf_name = "OMF_MS_GX3_AB";
	        R {
		        diag_std = [8, 8];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3";
            innov_mahal_test_thresh = 0.999;  
        }
    }   
}
