INCLUDE = [
    "site/umich-name.cfg",
    "viewer/segway.cfg",
];

vehicle {
    name = "segway";
    lcm_channel_prefix = "SEG_";
} # vehicle

chameleon {

    # camera params
    #cam_id = "b09d01009bcba4";		# Mono
    cam_id = "b09d01009bcb84";		# Color

    video_format = 0;			# see chameleon.c chameleon_load_cfg
					# Format7 formats depend on camera differ between color and bw
					# 0 = DC1394_VIDEO_MODE_FORMAT7_0; -- GBRG 
					# 1 = DC1394_VIDEO_MODE_FORMAT7_1 -- 
					# 2 = DC1394_VIDEO_MODE_FORMAT7_2
					# 3 = DC1394_VIDEO_MODE_FORMAT7_3
					# 4 = DC1394_VIDEO_MODE_FORMAT7_4r
					# 5 = DC1394_VIDEO_MODE_FORMAT7_5
					# 6 = DC1394_VIDEO_MODE_FORMAT7_6
					# 7 = DC1394_VIDEO_MODE_FORMAT7_7
					# 8 = DC1394_VIDEO_MODE_640x480_MONO8 (works on all chameleon cameras)
					# 9 = DC1394_VIDEO_MODE_1280x960_MONO8; 
    frame_rate = 30;             
    brightness = 0.0;           	# [0.0 to 6.2] default 0.0 
    exposure_mode = "auto";    	 	# auto/manual/off
    exposure = 0.0;               	# [-7.6 to 2.4] default auto
    gamma_mode = "off";        		# manual/off
    gamma = 0.0;                  	# [.5 to 4] default off
    shutter_mode = "auto";      	# auto/manual
    shutter = 0.0;                	# [0 to 0.5] default auto
    gain_mode = "auto";         	# auto/manual
    gain = 0.0;                     	# [-6 to 24] default 0
    
    # lcm setup
    botlcm_image_t_channel = "CMLN_IMAGE_SEG";
    
} # Chameleon camera setup




seg-position {
    channel = "SEG_POSITION";
}

sensors {
    gpsd3-client {
        gsd {
            io = "none";
            channel = "SEG_GPSD3";
        }
        x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];
	    
        gpsddev = "/dev/ttyS7";

    } #ppsboard-gps

    gpsd3-rtk-client {
        gsd {
            io = "none";
            channel = "SEG_RTK_GPSD3";
        }
        x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];

        gpsddev = "/dev/ttyS6";

    } #ppsboard-gps


    ms-gx3-25 {
        gsd {
            io = "serial";
            device = "/dev/ttyACM1";
            baud = 115200;
            parity = "8N1";
            channel = "SEG_MICROSTRAIN_25";
        }
        #x_vs = [0,0,0,0,180,0]; # oldest data
	#x_vs = [0,0,0,180,0,0]; # older data
	x_vs = [0,0,0,0,0,0]; # newest data

        x_lr = [0,0,0,0,0,-90];
    } #microstrain

    ms-gx3-45 {
        gsd {
            io = "serial";
            device = "/dev/ttyACM1";
            baud = 115200;
            parity = "8N1";
            channel = "SEG_MICROSTRAIN_45";
        }
        x_vs = [0,0,0,0,0,0];
        x_lr = [0,0,0,0,0,-90];
    } #microstrain

    kvh-dsp3000 {
        gsd {
            io = "serial";
            #device = "/dev/ttyS5";
            device = "/dev/ttyUSB0";
            baud = 38400;
            parity = "8N1";
            channel = "SEG_KVH";
        }
        x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];
    } #kvh
    
    velodyne {
	model = "HDL_32E";
	channel = "SEG_VELODYNE";
	#x_vs = [-0.11,0,-1.35,180,-30,0];
	#x_vs = [-0.08,0,-1.06,0,0,0];
	x_vs = [0,0,-1.03,0,0,-90];
        x_lr = [0,0,0,0,0,0];
	intrinsic_calib_file = "../../config/velodyne/HDL32E_segway_db.xml";
    } # velodyne
    
    
} #sensors

hotel {
    easydaq {
        device = "/dev/ttyS4";

        relay1 {
            label = "ladybug";
            group = "Cameras";
            state = 0;
        }
        relay2 {
            label = "bumblebee";
            group = "Cameras";
            state = 0;
        }
        relay3 {
            label = "kvh";
            group = "Sensors";
            state = 0;
        }
        relay4 {
            label = "freewave";
            group = "rtk";
            state = 0;
        }
        relay5 {
            label = "novatel";
            group = "rtk";
            state = 0;
        }
        relay6 {
            label = "velodyne";
            group = "Lidars";
            state = 0;
        }
        relay7 {
            label = "estop";
            group = "Stop";
            state = 0;
            exclude_all = 1;
        }
        relay8 {
            label = "hokuyo30";
            group = "Lidars";
            state = 0;
        }
    } #easydaq
} #hotel


navigator {
    channel = 			"SEG_NAVIGATOR";
    channel_debug_meas = 	"SEG_NAVIGATOR_DEBUG_MEAS";
    channel_debug_pred = 	"SEG_NAVIGATOR_DEBUG_PRED";
    channel_drop_ds =    	"SEG_NAVIGATOR_DROP_DS";
    channel_drop_ds_ack = 	"SEG_NAVIGATOR_DROP_DS_ACK";

    est {
        debug = 1;                  # turn on/off navigator_debug_t msgs
        est_engine = "EKF";
	
	org_lat = 45.563267;        	# douglas lake center of SOUTH fishtail bay
        org_lon = -84.672318;       	# douglas lake center of SOUTH fishtail bay
	
        # note state sizes depends on process model you set up below
        ini_mu = [0,0, 0,0,0, 0,0,0];
	ini_mu_dtor = [0,0, 1,1,1, 1,1,1];
	
        # Sigma to associate with initilization (order of magnitude greater than sensor)
	# directly specify full initial sigma with ini_Sigma = double(n*n)
	# or set the standard deviation of a diagonal matrix (in human readable units)
	# need to know which state elements are in degrees
	ini_Sigma {
	    diag_std = [0.0,0.0, 10.0,10.0,0.0, 10.0,10.0,10.0];
	    dtor = [0,0, 1,1,1, 1,1,1];
	}
    }
    
    pmf {
        pmf_name = "PMF_DIFFERENTIAL_DRIVE";
	
	Qadd { # additive noise for quantities not affected by control
	    diag_std = [0,0, 1,1,0, 1,1,1];
	    dtor = [0,0, 1,1,1, 1,1,1];
    	}
	
	Qu { # wheel velocities (meter/sec), and delta kvh (degrees/second)
	    diag_std = [0.7, 0.7, 0.005];
	    dtor = [0, 0, 1];
    	}
	
	axel_track = 0.5461; # distance between wheels, 21.5 inches
	wheel_radius = 0.2413; # 19 inches diameter
	wheel_size_fudge_factor = 1; 
    }
    
    omfs {

	# for the new -25 driver
	OMF_MS_GX3_25_RP {
            omf_name = "OMF_MS_GX3_25_RP";
            R {
		        diag_std = [2, 2];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3-25";
            innov_mahal_test_thresh = 0.999;
        }
        OMF_MS_GX3_25_AB {
            omf_name = "OMF_MS_GX3_25_AB";
	        R {
		        diag_std = [8, 8];
		        dtor = [1, 1];
	        }
            sensor_key = "ms-gx3-25";
            innov_mahal_test_thresh = 0.999;  
        }


#	# for the legacy driver
#        OMF_MS_GX3_RP {
#            omf_name = "OMF_MS_GX3_RP";
#            R {
#		        diag_std = [2, 2];
#		        dtor = [1, 1];
#	        }
#            sensor_key = "sen-ms-gx3-25";
#            innov_mahal_test_thresh = 0.999;
#        }
#        OMF_MS_GX3_AB {
#            omf_name = "OMF_MS_GX3_AB";
#	        R {
#		        diag_std = [8, 8];
#		        dtor = [1, 1];
#	        }
#            sensor_key = "sen-ms-gx3-25";
#            innov_mahal_test_thresh = 0.999;  
#        }


    }   
}
