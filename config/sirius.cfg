acfr
{
    sirius-control
    {
        heading
        {
            kp = 2.0; # 700.0;
            ki = 0.025; #1.0;
            kd = 0.0;
            sat = 130;
        }
        depth
        {
            kp = 1.0; #200.0;
            ki = 0.02; #10.0;
            kd = 0.0;
            sat = 130;
        }
        sway
        {
            kp = 4.0; #100.0;
            ki = 0.6; #1.0;
            kd = 0.0;
            sat = 130.0;
        }
        surge
        {
            kp = 4.0; #500.0;
            ki = 0.6; #50.0;
            kd = 0.0;
            sat = 130.0;
        }
        
        prop_factor = 1.4;
        max_prop_rpm = 130;
        min_prop_rpm = -130;
        
        traj
        {
            heading_rate_limit = 0.2;
            depth_rate_limit  = 0.2;
            surge_rate_limit = 0.3;
            sway_rate_limit = 0.1;
            heading_tau = 0.8;
            depth_tau = 1.5;
            surge_tau =  2.0;
            sway_tau = 4.0;
            two_point_max_step = 0.7;
            two_point_gain = 0.5;
            tl_band  = 0.5;
            tl_gain = 0.2;
            fwd_distance_min = 1.5;
            fwd_distance_slowdown = 3.0;
        }
        debug
        {
            mp = 0;
            control = 1;
            trajectory = 1;
            main = 1;
        }
	
    }
    
    sirius-monitor
    {
        max_depth = 150;           #m
    }

    sirius-sim
    {
        M = 250;                   #Kg
        M11 = 15.975; #0.0639*M; //added mass of prolate elipsoid (Kg)
        M22 = 227.8; # 0.9112*M; //added mass of prolate elipsoid (Kg)
        M33 = 227.8; #0.9112*M; //added mass of prolate elipsoid (Kg)
        Buoy = 8;                  #Newtons pos up
        current_speed = 0.0; #.01; // 0.11;//.1;              //m/sec
        current_dir = 0;       #degrees (compass) flowing to 
        thruster_tau = .4;
        rollpitch_tau = 0.1;
        J = 25;
        J11 = 17.5; #0.7*J; // added mass of prolate elipsoid
        yaw_damping = 165;
    }
    
    aio-relay
    {
        relays = ["seabird", "mains", "lat_vert", "doppler", "deltaT"];
        initial_state = [ 0, 0, 0, 1, 0 ];
    }
    
    sirius-motors
    {
        vert_device = "/dev/ttyCTI9";
        vert_baud = 19200;
        vert_parity = "8N1";
        port_device = "/dev/ttyCTI11";
        port_baud = 19200;
        port_parity = "8N1";
        starb_device = "/dev/ttyCTI8";
        starb_baud = 19200;
        starb_parity = "8N1";
    }

    cam-trigger-tcp 
    {
        IP = "172.16.154.184";
        port = "4002";
        pulseWidthUs = 7000;
        strobeDelayUs = 0;
        frequency = 1;
    }

}

sensors
{
    rdi 
    {
        gsd 
        {
            io = "serial";
            device = "/dev/ttyCTI4";
            baud   = 57600;
            parity = "8N1";
            channel = "RDI";
        }
        mode = "PD5";
        pd5_count_max = 5;
        pd0_count_max = 1;
    }
    
    ecopuck
    {
        gsd
        {
            io = "serial";
            device = "/dev/ttyCTI7";
            baud   = 19200;
            parity = "8N1";
            channel = "ECOPUCK";
        }
    }
    
    parosci
    {
        gsd
        {
            io = "serial";
            device = "/dev/ttyCTI2";
            baud   = 9600;
            parity = "8N1";
            channel = "PAROSCI";
        }
    }
    
    hg1700 
    {
       imuPort = 0;
    }
    
    gpsd-client3 
    {
        gsd 
        {
            io = "none";
            channel = "GPSD_CLIENT";
        }
        gpsddev = "";
    } 
    
    os-power-system
    {
        io = "socket";
        ip = "172.16.1.12";
        num_devs = 3;
        ports = ["20", "21", "22"];
    }
    
    oas
    {
        gsd
        {
            io = "serial";
            device = "/dev/ttyCTI3";
            baud   = 115200;
            parity = "8N1";
            channel = "OAS";
        }
        range = 30;
        startGain = 20;
        absorption = 0.2;
        pulse = 150;
        dataPoints = 1;
        minRange = 0.6;
        altitudeOffset = 0.62;
        declinationAngRad = 0.7854;
        filterWidth = 5;
    }
    
    deltaT
    {
        range = 100;
        startGain = 9;
        pulseLength = 600;
        frequency = 260;
        dataPoints = 8000;
        delay = 50;
        autoRange = 0;
        IP = "172.16.154.220";
        useNavAlt = 1;
    }
    
    seabird
    {
        gsd
        {
            io = "serial";
            device = "/dev/ttyCTI1";
            baud   = 9600;
            parity = "8N1";
            channel = "SEABIRD";
        }
        pumpOnDepth = 2.5;
        pumpOffDepth = 2.0;
        depthTestTime = 5;   
    }
    
    lq_modem
    {
        gsd
        {
            io = "serial";
            device = "/dev/ttyCTI10";
            baud   = 9600;
            parity = "8N1";
            channel = "LQ_MODEM";
        }
    }    

    micron {
            device = "/dev/ttyCTI3";
            baud = 115200;
            parity = "8N1";
            left_limit = 180;
            right_limit = 225;
            initial_gain = 40;
            range = 10;
            range_resolution = 0.05;
            angle_resolution = "low";
            ad_span = 80;
            ad_low = 0;
            
            position = [0, 0, 0, 0, 0, 0];
    }

    usb2000-spec
    {
        io = "socket";
        ip = "172.16.154.184";
        port = "4001";
        checkRate = 10; #how many samples to collect before gain recalculation
        meanThres_autoGain = 6000;
        meanStartIdx = 172; #index to start mean calculation
        meanWidth = 891; # width of mean calculation
        autoGainOn = 1;
        intTimeIntial = 10; #time in ms
    }
    
    usb2000-spec-calib #This is implemented during a FOV calibration run
    {
        io = "socket";
        ip = "172.16.154.184";
        port = "4001";
        checkRate = 10; #how many samples to collect before gain recalculation
        meanThres_autoGain = 2000;
        meanStartIdx = 172; #index to start mean calculation
        meanWidth = 891; # width of mean calculation
        autoGainOn = 1;
        intTimeIntial = 1; #time in ms
    }
    
    sts-spec
    {
        io = "serial";
        #device = "/dev/ttyUSB1";
        serial_dev = "/dev/ttyCTI0";
        baud = 115200;
        parity = "8N1";
        checkRate = 20; #how many samples to collect before gain recalculation
        sampleInterval = 1; #time in seconds between sampling
        meanThres_autoGain = 6000;
        meanStartIdx = 350; #index to start mean calculation
        meanWidth = 300; # width of mean calculation
        autoGainOn = 1;
        intTimeIntial = 2000; #time in ms
    }
    
    #evologics-modem
    evologics-usbl
    {
	device="/dev/ttyCTI7";
        baud = 19200;
        parity = "8N1";
	ping_period = -1;
	ping_timeout = 20;
	gain = 1;
	source_level = 3;
	auto_gain = "true";
	lcm = ["AUV_STATUS.*"];
	targets = [1];
	target_names = ["SIRIUS"];
        attitude_source = "AUV_STATUS";
        gps_source = "AUV_STATUS";
        has_ahrs = "false";
        usbl_ins = [-0.5, 0.0, 0.0, 0, 0, 0];
        ins_ship = [0, 0, 0, 0, 0, 0];
    }
}

nav 
{
    acfr-nav 
    {
        # SLAM config files
        vehicleType = "sirius";
        slamConfig = "../config/slam_sirius.cfg";
        slamMag = "../config/slam_mag.cfg";
        # the options for rph are os, hmr3600, ms-gx1
        #rph = "os";
        rph = "rdi";
        useParosci = "true";
        useRdi = "true";
        # sendNav options are true and false
        sendNav = "true";
        # updateRate options are 1, 5, 10 and 100 Hz
        updateRate = 10;
        # save the covariance as we go
        saveCov = "false";
        # OPOS messge send rate, options are 1, 5, 10, 100 Hz
        oposRate = 10;
	} #acfr-slam
}

cameras {
    cam1 {
        uid = 122724; # Sirius GC1380C (colour)
        channel = "PROSILICA_LC16";
	#publish = "false"; # don't push the images onto LCM
        #logtodisk = "true"; # write the images to disk
    	x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];
        #attfile = "../config/prosilica/attfile.txt";
        PvAttributes {
            FrameStartTriggerMode = "SyncIn2";
	        FrameStartTriggerDelay = "2000";
            #FrameStartTriggerMode = "FixedRate";
            FrameRate = "1.0";
            
            # FOR MANUAL MODE
            #ExposureMode = "Manual";
            #ExposureValue = "2500";
            GainMode = "Manual";
            GainValue = "0";
            
            # FOR AUTO MODE
            ExposureMode = "Auto";
            ExposureAutoAlg = "Mean"; 
            ExposureAutoMax = "5000"; 
            ExposureAutoMin = "8"; #default value
            ExposureAutoRate = "90"; #pct of max speed
            ExposureAutoTarget = "20";
            #GainMode = "Auto";
            #GainAutoAlg = "Mean"; #USE Default
            #GainAutoMax = "25";
            #GainAutoMin = "0";
            #GainAutoRate = "100"; #USE Default		

    	    PixelFormat = "Bayer16";
            #PixelFormat = "Mono16";
            PacketSize = "1500";
            StreamBytesPerSecond = "4500000";
            MulticastEnable = "Off";
	    WhitebalValueRed = "200";
	    WhitebalValueBlue = "200";
        }

        Calib {
            #matlab_calib_file = "foo.m";
            width = 1360;
            height = 1024;
            pinhole = [ 1705.093198218658472, 1711.120531258230358, 0.000000000000000, 657.099820257170677, 534.603434238885598 ]; # [fx fy skew uo vo]
            distortion_model = "radial";
            distortion_coeffs = [ 0.032301519492003, 0.234757273663815, 0.006145448313571, 0.004743213376114, 0.000000000000000 ]; # [kr1 kr2 kt1 kt2 kr3]
        }
    } #cam1

    cam2 {
        uid = 123601; # Sirius GC1380M (monochrome)
        channel = "PROSILICA_RM16";
	#publish = "false"; # don't push the images onto LCM
        #logtodisk = "true"; # write the images to disk
	x_vs = [1,2,3,4,5,6];
        x_lr = [0,0,0,0,0,0];
        #attfile = "../config/prosilica/attfile.txt";
        PvAttributes {
            FrameRate = "1.0";
            #FrameStartTriggerMode = "FixedRate";
            FrameStartTriggerMode = "SyncIn2";
    	    FrameStartTriggerDelay = "2000";            
    	    # FOR MANUAL MODE
            #ExposureMode = "Manual";
            #ExposureValue = "1000";
            GainMode = "Manual";
            GainValue = "0";
            
            # FOR AUTO MODE
            ExposureMode = "Auto";
            ExposureAutoAlg = "Mean"; 
            ExposureAutoMax = "5000";
            ExposureAutoMin = "8"; #default value
            ExposureAutoRate = "90"; #pct of max speed
            ExposureAutoTarget = "20";
            #GainMode = "Auto";
            #GainAutoAlg = "Mean"; #Use defualt
            #GainAutoMax = "25";
            #GainAutoMin = "0";
            #GainAutoRate = "100"; #Use default		
            
             PacketSize = "1500";
             StreamBytesPerSecond = "4500000";
             MulticastEnable = "Off";
             PixelFormat = "Mono16";
             
             # For fixed strobe length
             Strobe1ControlledDuration = "On";
             Strobe1Duration = "10000";
             Strobe1Mode = "FrameTrigger";
             SyncOut1Mode = "Strobe1";
             # For strobe length set off of cam2 (mono)
             #SyncOut1Mode = "Exposing";
             
             # Trigger cam1 color 
             SyncOut2Mode = "Exposing";

        }
    } #cam2

} #cameras


vimba {
    cam1 {
        uid = "02-2141A-16891"; # Sirius GC1380C (colour)
        channel = "PROSILICA_LC16";
	publish = "false"; # don't push the images onto LCM
        scale = 1;
        features {

            PixelFormat = "BayerRG12";
            GevSCPSPacketSize = 1500;
            StreamBytesPerSecond = "4500000";

            AcquisitionFrameCount = 1;
            AcquisitionMode = "Continuous";
            AcquisitionFrameRateAbs = 1.0;

            TriggerActivation = "RisingEdge";
            TriggerSource = "Line2";
            TriggerSelector = "FrameStart";
            TriggerDelayAbs = 2000.0;
            TriggerMode = "On";
            TriggerOverlap = "Off";

            ExposureAuto = "Continuous";
            ExposureAutoAlg = "Mean"; 
            ExposureAutoMax = 6000; 
            ExposureAutoMin = 100;
            ExposureAutoTarget = 20;


            GainAuto = "Off";
            GainAutoMax = 27;
            GainAutoMin = 0;
            GainRaw = 8;


        }
    } #cam1

    cam2 {
        uid = "02-2140A-17787"; # Sirius GC1380M (monochrome)
        channel = "PROSILICA_RM16";
	publish = "false"; # don't push the images onto LCM
        scale = 1;
        features {
            PixelFormat = "Mono12";
            GevSCPSPacketSize = 1500;
            StreamBytesPerSecond = "4500000";

            AcquisitionFrameCount = 1;
            AcquisitionMode = "Continuous";
            AcquisitionFrameRateAbs = 1.0;

            TriggerActivation = "RisingEdge";
            TriggerSource = "Line2"; #"FixedRate";
            TriggerSelector = "FrameStart";
            TriggerDelayAbs = 2000.0;
            TriggerMode = "On";
            TriggerOverlap = "Off";

            ExposureAuto = "Continuous";
            ExposureAutoAlg = "Mean"; 
            ExposureAutoMax = "6000"; 
            ExposureAutoMin = "100";
            ExposureAutoTarget = "20";

            GainAuto = "Off";
            GainAutoMax = 30;
            GainAutoMin = 0;
            GainRaw = 0;

        }

    } #cam2

} #cameras


