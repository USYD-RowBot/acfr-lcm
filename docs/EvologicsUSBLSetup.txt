The evologics setup is as follows.  There is an evologics-modem process that is running both on the top side and the vehicle.  This takes care of pinging the vehicle, generating USBL measurements and/or channeling lcm messages between the platforms depending on the config settings. The settings are as follows: 
* ping_period - the amount of time to wait between pings.  Set this to -1 on the vehicle side so it doesn't ping but just waits to be interrogated.  The process uses an instant message to talk to the target vehicle(s).
* source_level - the loudness of the ping.  Use 3 in air for testing (low noise level) and 0 in water to get maximum intensity
* targets - a list of modem targets to ping.  Each modem has a unique target id in its firmware
* target_names - a list of the target names.  These are used to route lcm messages.  The software looks at the lcm channel name and sends any messages with the name (denoted by the portion of the channel name after the last '.') to the appropriate modem.  The list of target_names corresponds to the list of targets so a name will be routed to the corresponding modem.  On the top side these lists are used to decide where to send messages designated for a particular platform.  On the vehicle side, this is used to allow the vehicle to send its own status messages up the acoustic channel.  For example, the yellowbox should be configured to send messages received on channel *.IVERAME to the AME modem.  On the AUV, it is configured to send *.IVERAME messages to the yellowbox.
* lcm - a list of lcm channels to subscribe to.  These will be directed to the appropriate modem based on the target name.  This typically includes the USBL_FIX.* messages as well as TASK_PLANNER_COMMAND.* to allow abort messages, mission plan updates and the like to be sent down to the vehicle.  These messages can be any length and will be sent as an instant message (if less than 64 bytes) or as a burst data packet (for longer messages).
* lcm_pbm - list of lcm messages to queue as a piggy back message.  On the vehicle this is configured to receive the AUVSTAT.IVERAME message.  These messages will be queued (with a queue length of 1) on the modem waiting for an instant message to arrive from the top side.  When the instant message is received, the piggy back data is sent back to the topside in its instant message reply.  The IM messages must be less than 64 bytes, which is the case for the auv_status message.

In addition to managing the lcm routing, the evologics-modem also receives USBL fixes from the modem.  It broadcasts these raw observations on the EVO_USBLFIX.<target_name> channel.  There is an evologics-usbl process which waits for EVO_USBLFIX.<target name> messages.  It is also configured to register for the appropriate ship_status message using the ship_status_channel configuration parameter (this is where you would change between the SHIP_STATUS.NOVATEL or SHIP_STATUS.YELLOWBOX to decide which reference to use).  It combines the ship_status data with the USBL fix to generate a USBL_FIX.<target_name> which is then broadcast back on lcm.  The evologics-modem is registered to listen for these messages and to send them to the appropriate target.  The offsets for the usbl relative to the nav reference also need to be set up in the configuration file for the evologics-usbl process.

The evologics-ahrs process registers for the ahrs data generated by the USBL and spits it out on the AHRS lcm channel.  This is subscribed to by the gpds_ahrs_munge program (which is also listening for the GPSD messages).  These are combined into the ship_status message.
