set (LCMTYPES_HPP ${CMAKE_CURRENT_BINARY_DIR}/lcmtypes.hpp)
set (LCMTYPES_HPP_INCLUDE ${INCLUDE_OUTPUT_PATH}/perls-lcmtypes++/lcmtypes.hpp)

file (WRITE  ${LCMTYPES_HPP} "/* CMAKE AUTOGENERATED FILE - DO NOT EDIT BY HAND!! */\n")
file (APPEND ${LCMTYPES_HPP} "#ifndef __PERLS_LCMTYPES_HPP__\n")
file (APPEND ${LCMTYPES_HPP} "#define __PERLS_LCMTYPES_HPP__\n")
file (APPEND ${LCMTYPES_HPP} "\n")

# emit C++ lcmtypes
set (LCM_SRC "")
foreach (PACKAGE ${PERLS_LCM_PACKAGES})
  # round up .lcm definition files
  file (GLOB LCM_DEFS ${PERLS_LCMDEFS_DIR}/${PACKAGE}/*.lcm)

  foreach (LCM_DEF ${LCM_DEFS})
    get_filename_component (LCM_TYPE ${LCM_DEF} NAME_WE)
    string (REGEX REPLACE "^${PACKAGE}_" "" LCM_TYPE ${LCM_TYPE})
    set (LCM_TYPE_HPP ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE}/${LCM_TYPE}.hpp)
    set (INCLUDE_HEADER ${INCLUDE_OUTPUT_PATH}/perls-lcmtypes++/${PACKAGE}/${LCM_TYPE}.hpp)

    file (APPEND ${LCMTYPES_HPP} "#include \"${PACKAGE}/${LCM_TYPE}.hpp\"\n")

    if (NOT EXISTS ${INCLUDE_OUTPUT_PATH}/perls-lcmtypes++/${PACKAGE})
      file (MAKE_DIRECTORY ${INCLUDE_OUTPUT_PATH}/perls-lcmtypes++/${PACKAGE})
    endif ()
    
    add_custom_command (
      OUTPUT ${LCM_TYPE_HPP} ${INCLUDE_HEADER}
      COMMAND ${LCM_GEN_EXE} ${LCM_DEF} --lazy --cpp --cpp-include "perls-lcmtypes++"
      COMMAND cp -u -f ${LCM_TYPE_HPP} ${INCLUDE_HEADER}
      DEPENDS ${LCM_DEF}
      )
    
    set (LCM_HEADERS ${LCM_HEADERS} ${LCM_TYPE_HPP})    
  endforeach ()
endforeach () #foreach (PACKAGE ${LCM_PACKAGES})

file (APPEND ${LCMTYPES_HPP} "\n")
file (APPEND ${LCMTYPES_HPP} "#endif //__PERLS_LCMTYPES_HPP__\n")

add_custom_command (
  OUTPUT ${LCMTYPES_HPP_INCLUDE}
  COMMAND cp -u -f ${LCMTYPES_HPP} ${LCMTYPES_HPP_INCLUDE}
  DEPENDS ${LCM_HEADERS} ${LCMTYPES_HPP}
  )

# EXTERNAL DEPS
perlsx_lcm ()

# BUILD LIBRARY
perls_add_library (perls-lcmtypes++ ${LCM_HEADERS} ${LCMTYPES_HPP_INCLUDE})
perls_target_link_libraries (perls-lcmtypes++ 
  ${PERLSX_LCM}
  )
set_target_properties (perls-lcmtypes++
  PROPERTIES 
  LINKER_LANGUAGE CXX
  )

# INSTALL LCM-GENERATED HEADERS
install (DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  DESTINATION ${INCLUDE_INSTALL_PATH}
  FILE_PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
  DIRECTORY_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
  FILES_MATCHING REGEX "^.*\\.h$|^.*\\.hpp$|^.*\\.hh$"
  PATTERN "CMakeFiles" EXCLUDE
  )
