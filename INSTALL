This is an alpha release of the PeRL Software library (perls).

DIRECTORY STRUCTURE
------------------------------------------------
The directory hierarchy is as follows:

build - cmake build tree takes place here, all local install output gets dumped here
cmake - custom cmake modules go here
config - bot-param and other configuration files go here
lcmdefs - lcm definition files go here, organized by packages
matlab - matlab scripts go here
src - all C/C++/Java/Python source files go here, organized by folder within group
third-party - all third-party source files go here


ENVIRONMENT VARIABLES
--------------------------------------------------
perls uses the following environment variables, if specified:
LCM_DEFAULT_URL
BOT_PARAM_SERVER_NAME

JAVA
--------------------------------------------------
NOTE: on 10.04 and below, lcm works best with SUN's JRE.  If you run
into any compile problems, make sure that your system is configured to
use the SUN JRE by default and not any of the other java alternatives.

`sudo apt-get install sun-java6-jdk`
`sudo update-alternatives --config java`
`sudo update-alternatives --config javac`
`sudo update-alternatives --config jar`


ESSENTIAL PACKAGES
--------------------------------------------------
For your convience, run the bash script `sudo perls-essential.sh`,
located in the 'third-party' directory, to download all required
debian packages.  (The cmake build process will prompt you for any others that
may be missing.)


BUILDING
--------------------------------------------------
perls uses cmake-2.8* as the build environment.  all configuration and 
compilation should be done from within the perls/build folder.

Step 1: Build third-party libs first, e.g., lcm and libbot2 at a minimum

`cd perls/third-party/build`
`ccmake ..`
`make`

to uninstall do `make uninstall` and to do a clean build do `make clean`

Step 2: Build the perls software suite

`cd perls/build`
`ccmake ..`
`make`, will dump exes in perls/build/bin, libs in perls/build/lib, etc

To do a clean build, just execute `make clean` from this same directory. Or
if you want to erase all of the cmake generated build files and start
from scratch just do `rm -rf *` in the build folder.

Optional targets include:
`make docs`, will generate help documentation in perls/build/doxygen.
e.g., cd into perls/build/doxygen/html and user your favorite browser
to view index.html


*Note: for Ubuntu 8.04 hardy systems, cmake-2.4 is the default install.
To install cmake-2.6 simply issue the following command: 
sudo apt-get install -t hardy-backports cmake
